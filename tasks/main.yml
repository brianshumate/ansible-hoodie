---
# File: tasks/main.yml - Hoodie role tasks

- name: sudo Configuration
  lineinfile: "dest=/etc/sudoers line='Defaults    always_set_home'"
  lineinfile: "dest=/etc/sudoers line='Defaults    set_home'"

- name: Hoodie user
  sudo: True
  user: "name={{ hoodie_admin }} home=/home/{{ hoodie_admin }} comment='Hoodie administrator' shell=/bin/bash"
  tags:
    - hoodie_user

- name: Hoodie user limits
  sudo: True
  template: "src=hoodie.limits.j2 dest=/etc/security/limits.d/hoodie"
  tags:
    - hoodie_user

- name: Hoodie user bin dir
  sudo: True
  file: "path=/home/{{ hoodie_admin }}/bin state=directory"
  tags:
    - hoodie_user

- name: Bootstrap script
  template: "src=hoodie-bootstrap.sh.j2 dest=/home/{{ hoodie_admin }}/bin/hoodie-bootstrap.sh mode=0755"
  tags: hoodie_scripts
  when: hoodie_app_tutorial == "0"

- name: Tutorial script
  template: "src=hoodie-bootstrap-tutorial.sh.j2 dest=/home/{{ hoodie_admin }}/bin/hoodie-bootstrap.sh mode=0755"
  when: hoodie_app_tutorial == "1"
  tags: hoodie_scripts

- name: Example scripts
  template: "src=hoodie-daemon.sh.j2 dest=/home/{{ hoodie_admin }}/bin/hoodie-daemon.sh mode=0755"
  tags: hoodie_user

- name: Install OS packages
  sudo: True
  apt: "name={{ item }} update_cache=yes"
  with_items: hoodie_os_packages
  tags:
    - system_packages

- name: Install Node Version Manager
  sudo: True
  git: "repo=https://github.com/creationix/nvm.git dest=/home/{{ hoodie_admin }}/.nvm accept_hostkey=yes"
  notify: Update permissions
  tags:
    - nodejs

- name: Install Node.js
  sudo: True
  shell: "source /home/{{ hoodie_admin }}/.nvm/nvm.sh && nvm install {{ hoodie_node_version }} creates=/home/{{ hoodie_admin }}/.nvm/versions/node/v{{ hoodie_node_version }} executable=/bin/bash"
  notify: Update permissions
  tags:
    - nodejs

- name: Install Hoodie
  sudo: True
  npm: "name={{ item }} executable=/home/{{ hoodie_admin }}/.nvm/versions/node/v{{ hoodie_node_version }}/bin/npm path=/home/{{ hoodie_admin }} global=yes state=present"
  with_items: hoodie_node_packages
  notify: Update permissions
  tags:
    - nodejs

- name: Log rotation configuration
  sudo: True
  copy: "src=hoodie-logrotate dest=/etc/logrotate.d/hoodie }}"

- name: Monit configuration directory
  sudo: True
  file: "path=/etc/monit.d state=directory"
  tags: monit

- name: Monit configuration
  sudo: True
  template: "src=hoodie-monit.j2 dest=/etc/monit.d/hoodie"
  tags: monit

#- name: Correct permissions
#  file: "path=/home/{{ hoodie_admin }} owner={{ hoodie_admin }} recurse=yes"

- name: Hoodie CouchDB settings
  copy: "src=hoodie-local.d dest=/etc/couchdb/local.d/hoodie owner=couchdb group=couchdb"
  tags: couchdb

- name: Configure CouchDB admin
  sudo: False
  command: "/usr/bin/curl -X PUT {{ hoodie_couchdb_url }}/_config/admins/{{ hoodie_couchdb_admin }} -d '{{ hoodie_couchdb_admin_passwd }}'"
  tags: couchdb

- name: Restart CouchDB
  sudo: True
  service: "name=couchdb state=restarted"
  tags: couchdb

- name: SSL directory
  sudo: True
  file: "path=/etc/ssl/{{ hoodie_app_domain }} state=directory"
  tags: nginx

- name: Install SSL chained cert
  copy: "src=_{{ hoodie_app_domain }}.chained.crt dest=/etc/ssl/{{ hoodie_app_domain }}/{{ hoodie_app_domain }}.chained.crt"
  tags: nginx

- name: Install SSL key
  copy: "src=_{{ hoodie_app_domain }}.key dest=/etc/ssl/{{ hoodie_app_domain }}/{{ hoodie_app_domain }}.key"
  tags: nginx

- name: Nginx virtual host config
  template: "src=hoodie-nginx.conf.j2 dest=/etc/nginx/sites-available/{{ hoodie_app_domain }}.conf"
  tags: nginx

- name: Link Nginx virtual host
  file: "src=/etc/nginx/sites-available/{{ hoodie_app_domain }}.conf dest=/etc/nginx/sites-enabled/{{ hoodie_app_domain }}.conf state=link"
  tags: nginx

- name: Remove Nginx default host
  file: "path=/etc/nginx/sites-enabled/default state=absent"
  tags: nginx

- name: Restart Nginx
  sudo: True
  service: "name=nginx state=restarted"
  tags: nginx
