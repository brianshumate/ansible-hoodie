server {
  listen *:80 default_server;
  server_name {{ hoodie_app_domain }};
  access_log /var/log/nginx/{{ hoodie_app_domain }}.access_log proxy;
  error_log /var/log/nginx/{{ hoodie_app_domain }}.error_log warn;

  # force all over https
  rewrite ^ https://{{ hoodie_app_domain }}$request_uri? permanent;
}

## main hoodie app
server {
  listen *:443;
  server_name {{ hoodie_app_domain }};
  access_log /var/log/nginx/{{ hoodie_app_domain }}.ssl_access_log proxy;
  error_log /var/log/nginx/{{ hoodie_app_domain }}.ssl_error_log warn;

  ssl on;
  ssl_certificate /etc/ssl/{{ hoodie_app_domain }}/{{ hoodie_app_domain }}.chained.crt;
  ssl_certificate_key /etc/ssl/{{ hoodie_app_domain }}/{{ hoodie_app_domain }}.key;
  ssl_session_cache  shared:SSL:16m;
  ssl_session_timeout 10m;
  ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers RC4:HIGH:!aNULL:!MD5:!kEDH;
  ssl_prefer_server_ciphers on;

  proxy_set_header Host            $host;
  proxy_set_header X-Real-IP       $remote_addr;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

  location / {
    root /home/hoodie/{{ hoodie_app_name }}/www;
    error_page 404 = /;
  }

  location ~ ^/_api(.*) {
    proxy_pass http://127.0.0.1:6001;
    proxy_redirect off;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  location ~ ^/(.*)/_changes {
    proxy_pass http://127.0.0.1:6001;
    proxy_redirect off;
    proxy_buffering off;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }
}
